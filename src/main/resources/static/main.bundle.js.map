{"version":3,"sources":["/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/$_lazy_route_resource lazy","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/app-routing.module.ts","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/app.component.css","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/app.component.html","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/app.component.ts","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/app.module.ts","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/dashboard/dashboard.component.css","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/dashboard/dashboard.component.html","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/dashboard/dashboard.component.ts","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz-form/quizz-form.component.css","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz-form/quizz-form.component.html","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz-form/quizz-form.component.ts","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz-question.ts","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz-response.ts","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz.ts","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/environments/environment.ts","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n\nimport { DashboardComponent }   from './dashboard/dashboard.component';\nimport { QuizzFormComponent } from './quizz-form/quizz-form.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'newquizz', component: QuizzFormComponent }\n  \n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* AppComponent's private CSS styles */\\nh1 {\\n    font-size: 1.2em;\\n    color: #999;\\n    margin-bottom: 0;\\n  }\\n  h2 {\\n    font-size: 2em;\\n    margin-top: 0;\\n    padding-top: 0;\\n  }\\n  nav a {\\n    padding: 5px 10px;\\n    text-decoration: none;\\n    margin-top: 10px;\\n    display: inline-block;\\n    background-color: #eee;\\n    border-radius: 4px;\\n  }\\n  nav a:visited, a:link {\\n    color: #607D8B;\\n  }\\n  nav a:hover {\\n    color: #039be5;\\n    background-color: #CFD8DC;\\n  }\\n  nav a.active {\\n    color: #039be5;\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n</div>\\n\\n<nav>\\n  <a routerLink=\\\"/dashboard\\\">Dashboard</a>  \\n  <a routerLink=\\\"/newquizz\\\">New Quizz</a>\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }   from '@angular/forms';\n\n\n\nimport { AppComponent } from './app.component';\nimport { QuizzFormComponent } from './quizz-form/quizz-form.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AppRoutingModule } from './/app-routing.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuizzFormComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,FormsModule, AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<p>\\n  dashboard works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/dashboard/dashboard.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ng-valid[required], .ng-valid.required  {\\n    border-left: 5px solid #42A948; /* green */\\n  }\\n  \\n  .ng-invalid:not(form)  {\\n    border-left: 5px solid #a94442; /* red */\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz-form/quizz-form.component.css\n// module id = ../../../../../src/app/quizz-form/quizz-form.component.css\n// module chunks = main","module.exports = \"<br/>\\n<div class=\\\"container\\\">\\n      <!-- <div [hidden]=\\\"submitted\\\"> -->\\n      <h1>New Quizz</h1>\\n      <form (ngSubmit)=\\\"onSubmit()\\\" #quizzForm=\\\"ngForm\\\">\\n\\n          <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col-md-9\\\">      \\n              </div>\\n              <div class=\\\"form-group col-md-3\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!quizzForm.form.valid\\\">Submit</button>        \\n                  <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"newQuizz(); quizzForm.reset()\\\">New Quizz</button>\\n              </div>\\n          </div>     \\n\\n          <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col-md-4\\\">        \\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\"\\n                  required\\n                  [(ngModel)]=\\\"model.name\\\" name=\\\"name\\\"\\n                  #name=\\\"ngModel\\\" placeholder=\\\"Quizz Name\\\">\\n                  <div [hidden]=\\\"name.valid || name.pristine\\\" class=\\\"alert alert-danger\\\"> Name is required</div>\\n              </div>\\n              <div class=\\\"form-group col-md-8\\\">\\n                    <div class=\\\"form-group\\\">\\n                      \\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"desc\\\"\\n                              required\\n                              [(ngModel)]=\\\"model.description\\\" name=\\\"desc\\\"\\n                              #desc=\\\"ngModel\\\"\\n                              placeholder=\\\"Quizz Description\\\">\\n                        <div [hidden]=\\\"desc.valid || desc.pristine\\\"\\n                            class=\\\"alert alert-danger\\\">\\n                          Name is required\\n                        </div>\\n                    </div>\\n              </div>\\n              \\n          </div>\\n\\n          </form>\\n          <form (ngSubmit)=\\\"onSubmit()\\\" #questionForm=\\\"ngForm\\\">\\n          <div class=\\\"form-row\\\">\\n\\n              <div class=\\\"form-group col-md-12\\\">\\n                  <label for=\\\"newQuestion\\\">Question</label>\\n                \\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"newQuestion\\\"\\n                          required\\n                          [(ngModel)]=\\\"model.newQuestion.question\\\" name=\\\"newQuestion\\\"\\n                          #newQuestion=\\\"ngModel\\\" placeholder=\\\"Question\\\">\\n                    <div [hidden]=\\\"newQuestion.valid || newQuestion.pristine\\\"\\n                        class=\\\"alert alert-danger\\\">\\n                      Question is required\\n                    </div>\\n              </div>\\n              <div class=\\\"form-group col-md-10\\\">\\n                  <label for=\\\"response0\\\">Response</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"response0\\\"\\n                          required\\n                          [(ngModel)]=\\\"model.newQuestion.responses[0].value\\\" name=\\\"response0\\\"\\n                          #response0=\\\"ngModel\\\" placeholder=\\\"Response 1\\\">\\n                  <div [hidden]=\\\"response0.valid || response0.pristine\\\"\\n                        class=\\\"alert alert-danger\\\">\\n                      Response is required\\n                  </div>\\n              </div>      \\n              <div class=\\\"form-group col-md-2\\\">\\n                  <label for=\\\"inputState\\\">Is Correct</label>\\n                  <select name=\\\"isCorrect0\\\" id=\\\"isCorrect0\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.newQuestion.responses[0].correct\\\">                \\n                      <option *ngFor=\\\"let aCorrectValue of correctValues\\\"\\n                        [value]=\\\"aCorrectValue\\\" > \\n                        {{aCorrectValue}}\\n                    </select>\\n              </div>\\n\\n              <div class=\\\"form-group col-md-10\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"response1\\\"\\n                          required\\n                          [(ngModel)]=\\\"model.newQuestion.responses[1].value\\\" name=\\\"response1\\\"\\n                          #response1=\\\"ngModel\\\" placeholder=\\\"Response 2\\\">\\n                  <div [hidden]=\\\"response1.valid || response1.pristine\\\"\\n                        class=\\\"alert alert-danger\\\">\\n                      Response is required\\n                  </div>\\n                </div>      \\n                <div class=\\\"form-group col-md-2\\\">\\n                    <select name=\\\"isCorrect1\\\" id=\\\"isCorrect1\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.newQuestion.responses[1].correct\\\">                \\n                      <option *ngFor=\\\"let aCorrectValue of correctValues\\\"\\n                        [value]=\\\"aCorrectValue\\\" > \\n                        {{aCorrectValue}}\\n                    </select>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-10\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"response2\\\"\\n                            required\\n                            [(ngModel)]=\\\"model.newQuestion.responses[2].value\\\" name=\\\"response2\\\"\\n                            #response2=\\\"ngModel\\\" placeholder=\\\"Response 3\\\">\\n                    <div [hidden]=\\\"response2.valid || response2.pristine\\\"\\n                          class=\\\"alert alert-danger\\\">\\n                        Response is required\\n                    </div>\\n                  </div>      \\n                  <div class=\\\"form-group col-md-2\\\">\\n                      <select name=\\\"isCorrect2\\\" id=\\\"isCorrect2\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.newQuestion.responses[2].correct\\\">                \\n                        <option *ngFor=\\\"let aCorrectValue of correctValues\\\"\\n                          [value]=\\\"aCorrectValue\\\" > \\n                          {{aCorrectValue}}\\n                      </select>\\n                  </div>\\n\\n                  <div class=\\\"form-group col-md-10\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"response3\\\"\\n                              required\\n                              [(ngModel)]=\\\"model.newQuestion.responses[3].value\\\" name=\\\"response3\\\"\\n                              #response3=\\\"ngModel\\\" placeholder=\\\"Response 4\\\">\\n                      <div [hidden]=\\\"response3.valid || response3.pristine\\\"\\n                            class=\\\"alert alert-danger\\\">\\n                          Response is required\\n                      </div>\\n                    </div>      \\n                    <div class=\\\"form-group col-md-2\\\">\\n                        <select name=\\\"isCorrect3\\\" id=\\\"isCorrect3\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.newQuestion.responses[3].correct\\\">                \\n                          <option *ngFor=\\\"let aCorrectValue of correctValues\\\"\\n                            [value]=\\\"aCorrectValue\\\" > \\n                            {{aCorrectValue}}\\n                        </select>\\n                    </div>\\n\\n              <div class=\\\"form-group col-md-3\\\">\\n                  <button type=\\\"submit\\\" \\n                  (click)=\\\"addQuestion();questionForm.reset();\\\"\\n                  \\n                  class=\\\"btn btn-primary\\\" [disabled]=\\\"!questionForm.form.valid\\\">Add Question</button>  \\n              </div>\\n              <div class=\\\"form-group col-md-9\\\"></div> \\n          </div>\\n\\n          <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col-md-12\\\">\\n\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                      <tr>\\n                        <th scope=\\\"col\\\">#</th>\\n                        <th scope=\\\"col\\\">Question</th>\\n                      </tr>\\n                    </thead>\\n                    <tbody>\\n                      <tr *ngFor=\\\"let question of model.questions; let i = index\\\">\\n                        <th scope=\\\"row\\\">{{i+1}}</th>\\n                        <td>{{question.question}}<ol>\\n                            <li *ngFor=\\\"let response of question.responses\\\">{{response.value}} <span *ngIf=\\\"response.correct ==='true'\\\" [ngClass]=\\\"{'label label-success': response.correct ==='true'}\\\">Correct</span></li>\\n                          </ol></td>\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n              </div>\\n          </div>\\n        </form>\\n\\n       \\n  <!-- </div> -->\\n\\n\\n  \\n  <!-- <div [hidden]=\\\"!submitted\\\">\\n    <h2>You submitted the following:</h2>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-3\\\">Name</div>\\n      <div class=\\\"col-xs-9  pull-left\\\">{{ model.name }}</div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-3\\\">Description</div>\\n        <div class=\\\"col-xs-9  pull-left\\\">{{ model.description }}</div>\\n      </div>\\n    <br>\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"submitted=false\\\">Edit</button>\\n  </div> -->\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz-form/quizz-form.component.html\n// module id = ../../../../../src/app/quizz-form/quizz-form.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport {Quizz} from '../quizz';\n\n@Component({\n  selector: 'app-quizz-form',\n  templateUrl: './quizz-form.component.html',\n  styleUrls: ['./quizz-form.component.css']\n})\nexport class QuizzFormComponent implements OnInit {\n\n  submitted = false;\n  \n  model = new Quizz(0,'Napoloeon','Egypte War');\n\n  correctValues: string[] = [\n    'false',\n    'true'\n  ]\n\n  constructor() { \n\n  }\n\n\n  onSubmit() { this.submitted = true; }\n  newQuizz() {\n    this.model = new Quizz(0, '', '');\n  }\n\n  addQuestion() {\n  \n    let newQuestion = this.model.newQuestion;\n    this.model.addQuestion(newQuestion);\n    this.submitted = false;\n  \n    \n  }\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz-form/quizz-form.component.ts","import {QuizzResponse} from './quizz-response';\n\n\nexport class QuizzQuestion {\n    responses: QuizzResponse[];\n    constructor(public question: string) {  \n        let response1 = new QuizzResponse('','false');\n        let response2 = new QuizzResponse('','false');\n        let response3 = new QuizzResponse('','false');\n        let response4 = new QuizzResponse('','false');\n        this.responses = [response1, response2, response3,response4];\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz-question.ts","export class QuizzResponse {\n\n    constructor(\n        public value: string,\n        public correct: string\n  \n      ) {  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz-response.ts","import {QuizzResponse} from './quizz-response';\nimport {QuizzQuestion} from './quizz-question'\n\nexport class Quizz {\n\n    newQuestion: QuizzQuestion;\n    questions : QuizzQuestion[];\n\n    constructor(\n        public id: number,\n        public name: string,\n        public description: string\n      ) {         \n            this.newQuestion = new QuizzQuestion('When did napoleon invade egype');\n            this.questions = [];\n             \n      }\n\n      addQuestion(question: QuizzQuestion){\n        this.questions.push(question);\n        this.newQuestion = new QuizzQuestion(''); \n      }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/main.ts"],"sourceRoot":"webpack:///"}