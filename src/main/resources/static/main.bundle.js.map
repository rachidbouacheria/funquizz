{"version":3,"sources":["/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/$_lazy_route_resource lazy","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/app-routing.module.ts","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/app.component.css","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/app.component.html","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/app.component.ts","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/app.module.ts","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/dashboard/dashboard.component.css","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/dashboard/dashboard.component.html","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/dashboard/dashboard.component.ts","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/mock-quizz.ts","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz-form/quizz-form.component.css","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz-form/quizz-form.component.html","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz-form/quizz-form.component.ts","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz-question.ts","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz-response.ts","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz.service.ts","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz.ts","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/environments/environment.ts","/Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n\nimport { DashboardComponent }   from './dashboard/dashboard.component';\nimport { QuizzFormComponent } from './quizz-form/quizz-form.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'newquizz', component: QuizzFormComponent }\n  \n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/app-routing.module.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* AppComponent's private CSS styles */\\nh1 {\\n    font-size: 1.2em;\\n    color: #999;\\n    margin-bottom: 0;\\n  }\\n  h2 {\\n    font-size: 2em;\\n    margin-top: 0;\\n    padding-top: 0;\\n  }\\n  nav a {\\n    padding: 5px 10px;\\n    text-decoration: none;\\n    margin-top: 10px;\\n    display: inline-block;\\n    background-color: #eee;\\n    border-radius: 4px;\\n  }\\n  nav a:visited, a:link {\\n    color: #607D8B;\\n  }\\n  nav a:hover {\\n    color: #039be5;\\n    background-color: #CFD8DC;\\n  }\\n  nav a.active {\\n    color: #039be5;\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n</div>\\n\\n<nav>\\n  <a routerLink=\\\"/dashboard\\\">Dashboard</a>  \\n  <a routerLink=\\\"/newquizz\\\">New Quizz</a>\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }   from '@angular/forms';\nimport { HttpClientModule }   from '@angular/common/http';\n\n\n\nimport { AppComponent } from './app.component';\nimport { QuizzFormComponent } from './quizz-form/quizz-form.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { QuizzService } from './quizz.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuizzFormComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,FormsModule, AppRoutingModule,HttpClientModule\n  ],\n  providers: [QuizzService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<p>\\n  dashboard works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/dashboard/dashboard.component.ts","import {QuizzResponse} from './quizz-response';\nimport {QuizzQuestion} from './quizz-question'\nimport {Quizz} from './quizz'\n\n\nexport class MockQuizz {\n      \n    \n    getMockNewQuestion() {\n        let resp1 = new QuizzResponse('R4', 'false');\n        let resp2 = new QuizzResponse('R5', 'false');\n        let resp3 = new QuizzResponse('R6', 'false');\n        let resp4 = new QuizzResponse('R7', 'false');\n        let responses = [resp1, resp2, resp3, resp4];\n        let newQuestion = new QuizzQuestion('Quelle est la couleur du cheval blanc d henry IV?', responses);\n\n        return newQuestion;\n    }\n    \n    getNewQuestion() {\n        let resp1 = new QuizzResponse('', 'false');\n        let resp2 = new QuizzResponse('', 'false');\n        let resp3 = new QuizzResponse('', 'false');\n        let resp4 = new QuizzResponse('', 'false');\n        \n        let responses = [resp1, resp2, resp3, resp4];\n        let newQuestion = new QuizzQuestion('', responses);\n\n        return newQuestion;\n    }\n\n    getMockQuizz() {\n\n        let quizz = new Quizz(0, '', '',[]);\n\n        return quizz;\n    }\n  \n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/mock-quizz.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ng-valid[required], .ng-valid.required  {\\n    border-left: 5px solid #42A948; /* green */\\n  }\\n  \\n  .ng-invalid:not(form)  {\\n    border-left: 5px solid #a94442; /* red */\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz-form/quizz-form.component.css\n// module id = ../../../../../src/app/quizz-form/quizz-form.component.css\n// module chunks = main","module.exports = \"<br/>\\n<div class=\\\"container\\\">\\n      <!-- <div [hidden]=\\\"submitted\\\"> -->\\n      <h1>New Quizz</h1>\\n      <form (ngSubmit)=\\\"onSubmit()\\\" #quizzForm=\\\"ngForm\\\">\\n\\n          <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col-md-9\\\">      \\n              </div>\\n              <div class=\\\"form-group col-md-3\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!quizzForm.form.valid\\\">Submit</button>        \\n                  <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"newQuizz(); quizzForm.reset()\\\">New Quizz</button>\\n              </div>\\n          </div>     \\n\\n          <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col-md-4\\\">        \\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\"\\n                  required\\n                  [(ngModel)]=\\\"model.name\\\" name=\\\"name\\\"\\n                  #name=\\\"ngModel\\\" placeholder=\\\"Quizz Name\\\">\\n                  <div [hidden]=\\\"name.valid || name.pristine\\\" class=\\\"alert alert-danger\\\"> Name is required</div>\\n              </div>\\n              <div class=\\\"form-group col-md-8\\\">\\n                    <div class=\\\"form-group\\\">\\n                      \\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"desc\\\"\\n                              required\\n                              [(ngModel)]=\\\"model.description\\\" name=\\\"desc\\\"\\n                              #desc=\\\"ngModel\\\"\\n                              placeholder=\\\"Quizz Description\\\">\\n                        <div [hidden]=\\\"desc.valid || desc.pristine\\\"\\n                            class=\\\"alert alert-danger\\\">\\n                          Name is required\\n                        </div>\\n                    </div>\\n              </div>\\n              \\n          </div>\\n\\n          </form>\\n          <form (ngSubmit)=\\\"onSubmit()\\\" #questionForm=\\\"ngForm\\\">\\n          <div class=\\\"form-row\\\">\\n\\n              <div class=\\\"form-group col-md-12\\\">\\n                  <label for=\\\"newQuestion\\\">Question</label>\\n                \\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"aNewQuestion\\\"\\n                          required\\n                          [(ngModel)]=\\\"newQuestion.question\\\" name=\\\"aNewQuestion\\\"\\n                          #aNewQuestion=\\\"ngModel\\\" placeholder=\\\"Question\\\">\\n                    <div [hidden]=\\\"aNewQuestion.valid || aNewQuestion.pristine\\\"\\n                        class=\\\"alert alert-danger\\\">\\n                      Question is required\\n                    </div>\\n              </div>\\n              <div class=\\\"form-group col-md-10\\\">\\n                  <label for=\\\"response0\\\">Response</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"response0\\\"\\n                          required\\n                          [(ngModel)]=\\\"newQuestion.responses[0].value\\\" name=\\\"response0\\\"\\n                          #response0=\\\"ngModel\\\" placeholder=\\\"Response 1\\\">\\n                  <div [hidden]=\\\"response0.valid || response0.pristine\\\"\\n                        class=\\\"alert alert-danger\\\">\\n                      Response is required\\n                  </div>\\n              </div>       \\n              <div class=\\\"form-group col-md-2\\\">\\n                  <label for=\\\"inputState\\\">Is Correct</label>\\n                  <select name=\\\"isCorrect0\\\" id=\\\"isCorrect0\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newQuestion.responses[0].correct\\\">                \\n                      <option *ngFor=\\\"let aCorrectValue of correctValues\\\"\\n                        [value]=\\\"aCorrectValue\\\" >{{aCorrectValue}}</select>\\n              </div>\\n\\n              <div class=\\\"form-group col-md-10\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"response1\\\"\\n                          required\\n                          [(ngModel)]=\\\"newQuestion.responses[1].value\\\" name=\\\"response1\\\"\\n                          #response1=\\\"ngModel\\\" placeholder=\\\"Response 2\\\">\\n                  <div [hidden]=\\\"response1.valid || response1.pristine\\\"\\n                        class=\\\"alert alert-danger\\\">\\n                      Response is required\\n                  </div>\\n                </div>      \\n                <div class=\\\"form-group col-md-2\\\">\\n                    <select name=\\\"isCorrect1\\\" id=\\\"isCorrect1\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newQuestion.responses[1].correct\\\">                \\n                      <option *ngFor=\\\"let aCorrectValue of correctValues\\\"\\n                        [value]=\\\"aCorrectValue\\\" > \\n                        {{aCorrectValue}}\\n                    </select>\\n                </div>\\n\\n                <div class=\\\"form-group col-md-10\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"response2\\\"\\n                            required\\n                            [(ngModel)]=\\\"newQuestion.responses[2].value\\\" name=\\\"response2\\\"\\n                            #response2=\\\"ngModel\\\" placeholder=\\\"Response 3\\\">\\n                    <div [hidden]=\\\"response2.valid || response2.pristine\\\"\\n                          class=\\\"alert alert-danger\\\">\\n                        Response is required\\n                    </div>\\n                  </div>      \\n                  <div class=\\\"form-group col-md-2\\\">\\n                      <select name=\\\"isCorrect2\\\" id=\\\"isCorrect2\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newQuestion.responses[2].correct\\\">                \\n                        <option *ngFor=\\\"let aCorrectValue of correctValues\\\"\\n                          [value]=\\\"aCorrectValue\\\" > \\n                          {{aCorrectValue}}\\n                      </select>\\n                  </div>\\n\\n                  <div class=\\\"form-group col-md-10\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"response3\\\"\\n                              required\\n                              [(ngModel)]=\\\"newQuestion.responses[3].value\\\" name=\\\"response3\\\"\\n                              #response3=\\\"ngModel\\\" placeholder=\\\"Response 4\\\">\\n                      <div [hidden]=\\\"response3.valid || response3.pristine\\\"\\n                            class=\\\"alert alert-danger\\\">\\n                          Response is required\\n                      </div>\\n                    </div>      \\n                    <div class=\\\"form-group col-md-2\\\">\\n                        <select name=\\\"isCorrect3\\\" id=\\\"isCorrect3\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newQuestion.responses[3].correct\\\">                \\n                          <option *ngFor=\\\"let aCorrectValue of correctValues\\\" [value]=\\\"aCorrectValue\\\" >{{aCorrectValue}}</option>\\n                        </select>\\n                    </div>\\n\\n              <div class=\\\"form-group col-md-3\\\">\\n                  <button type=\\\"submit\\\" \\n                  (click)=\\\"addQuestion(questionForm);\\\"\\n                  \\n                  class=\\\"btn btn-primary\\\" [disabled]=\\\"!questionForm.form.valid\\\">Add Question</button>  \\n              </div>\\n              <div class=\\\"form-group col-md-9\\\"></div> \\n          </div>\\n\\n          <div class=\\\"form-row\\\">\\n              <div class=\\\"form-group col-md-12\\\">\\n\\n                <table class=\\\"table\\\" >\\n                    <thead>\\n                      <tr>\\n                        <th scope=\\\"col\\\">#</th>\\n                        <th scope=\\\"col\\\">Question</th>\\n                      </tr>\\n                    </thead>\\n                    <tbody>\\n                      <tr *ngFor=\\\"let question of model.questions; let i = index\\\">\\n                        <th scope=\\\"row\\\">{{i+1}}</th>\\n                        <td>\\n<!--                         {{question.question}}<ol> -->\\n<!--                             <li *ngFor=\\\"let response of question.responses\\\">{{response.value}} <span *ngIf=\\\"response.correct ==='true'\\\" [ngClass]=\\\"{'label label-success': response.correct ==='true'}\\\">Correct</span></li> -->\\n<!--                           </ol> -->\\n                        \\t\\t<table class=\\\"intro\\\" >\\n                        \\t\\t\\t<tr>\\n                        \\t\\t\\t\\t<td colspan=\\\"3\\\">{{question.question}}</td>\\n                        \\t\\t\\t</tr>\\n                        \\t\\t\\t<tr *ngFor=\\\"let response of question.responses; let i = index\\\">\\n                        \\t\\t\\t\\t<td width=\\\"2%\\\">{{i+1}}</td> \\n                        \\t\\t\\t\\t<td width=\\\"5%\\\"><span *ngIf=\\\"response.correct ==='true'\\\" [ngClass]=\\\"{'glyphicon glyphicon-asterisk': response.correct ==='true'}\\\"></span></td>\\n                        \\t\\t\\t\\t<td width=\\\"93%\\\">{{response.value}}</td> \\n                        \\t\\t\\t\\t\\n                        \\t\\t\\t</tr>\\n                        \\t\\t</table>\\n                        \\n                        </td>\\n                        <td>\\n                          \\t<button type=\\\"button\\\" class=\\\"btn btn-default btn-sm\\\" (click)=\\\"removeQuestion(i);\\\">\\n\\t\\t\\t\\t\\t          <span class=\\\"glyphicon glyphicon-remove\\\"></span> Remove \\n\\t\\t\\t\\t\\t        </button>\\n                        </td>\\n                      </tr>\\n                    </tbody>\\n                  </table>\\n              </div>\\n          </div>\\n        </form>\\n\\n       \\n  <!-- </div> -->\\n\\n\\n  \\n  <!-- <div [hidden]=\\\"!submitted\\\">\\n    <h2>You submitted the following:</h2>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-xs-3\\\">Name</div>\\n      <div class=\\\"col-xs-9  pull-left\\\">{{ model.name }}</div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-3\\\">Description</div>\\n        <div class=\\\"col-xs-9  pull-left\\\">{{ model.description }}</div>\\n      </div>\\n    <br>\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"submitted=false\\\">Edit</button>\\n  </div> -->\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz-form/quizz-form.component.html\n// module id = ../../../../../src/app/quizz-form/quizz-form.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport {QuizzResponse} from '../quizz-response';\nimport {QuizzQuestion} from '../quizz-question'\nimport {Quizz} from '../quizz';\nimport { QuizzService } from '../quizz.service';\n\n\n@Component({\n  selector: 'app-quizz-form',\n  templateUrl: './quizz-form.component.html',\n  styleUrls: ['./quizz-form.component.css']\n})\nexport class QuizzFormComponent implements OnInit {\n\n    submitted   = false;\n    newQuestion = null;\n    model       = null;\n    httpModel = null;\n\n    correctValues: string[] = ['false','true']\n\n    constructor(private quizzService: QuizzService) {\n        \n    }\n\n    onSubmit() { this.submitted = true; }\n\n    addQuestion(questionForm) {\n        \n        let c1 = this.newQuestion.responses[0].correct;\n        let c2 = this.newQuestion.responses[1].correct;\n        let c3 = this.newQuestion.responses[2].correct;\n        let c4 = this.newQuestion.responses[3].correct;\n \n          \n        if(c1==c2 && c3==c4 && c1==c3){\n            if (c1 == 'false'){\n               alert ('At least one response must be correct'); \n            }else{\n                 alert ('responses cannot all be correct'); \n            }\n            return;\n        }\n        let numberOfCorrect = 0;\n        if(c1=='true') numberOfCorrect ++\n        \n        if(c2=='true') numberOfCorrect ++\n        if(c3=='true') numberOfCorrect ++\n        if(c4=='true') numberOfCorrect ++\n        \n        if(numberOfCorrect>1){\n             alert('You can only have one correct response. You have: 333' + numberOfCorrect);\n            return;\n        }\n                \n        this.model.addQuestion(this.newQuestion);\n//         var myJSON = JSON.stringify(this.model);\n//        console.log(\"============================\");\n//        console.log(myJSON);\n//        console.log(\"============================\");\n        \n        this.submitted   = false;\n        questionForm.reset();\n        this.resetNewQuestion();\n        \n        this.quizzService.getHeroes().subscribe(newQuizz => {\n            this.model = newQuizz;\n            console.log(\"======== http model =========\");\n            console.log(newQuizz);\n        });\n        \n       \n    }\n    \n    removeQuestion(questionIndex){\n        this.model.removeQuestion(questionIndex);\n    }\n    \n    resetNewQuestion(){\n        this.newQuestion = this.quizzService.getNewQuestion();\n    }\n    \n    ngOnInit() {\n        this.quizzService.getMockNewQuestion1().subscribe(newQuestion => this.newQuestion = newQuestion);\n        this.model        = this.quizzService.getMockQuizz();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz-form/quizz-form.component.ts","import {QuizzResponse} from './quizz-response';\n\n\nexport class QuizzQuestion {\n    \n    constructor(public question: string, public responses: QuizzResponse[]) {  \n      \n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz-question.ts","export class QuizzResponse {\n\n    constructor(\n        public value: string,\n        public correct: string\n      ) {  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz-response.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/observable/of';\n\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport {QuizzQuestion} from './quizz-question'\nimport {Quizz} from './quizz'\n\nimport {MockQuizz} from './mock-quizz'\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable()\nexport class QuizzService {\n        \n  private showUrl = '/quizz';\n  mockQuizz = new MockQuizz();\n  constructor( private http: HttpClient) { }\n    \n \n    \n    getMockNewQuestion() {\n        return this.mockQuizz.getMockNewQuestion();\n    }\n    \n     getHeroes (): Observable<Quizz[]> {\n        return this.http.get<Quizz[]>(this.showUrl)\n          ;\n      }\n    \n    getMockNewQuestion1(): Observable<QuizzQuestion> {\n      return of(this.mockQuizz.getMockNewQuestion());\n    }\n    \n    getNewQuestion() {\n       return this.mockQuizz.getNewQuestion();\n    }\n\n    getMockQuizz() {\n        return this.mockQuizz.getMockQuizz();\n    }\n    \n    /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n//  private handleError<T> (operation = 'operation', result?: T) {\n//    return (error: any): Observable<T> => {\n// \n//      // TODO: send the error to remote logging infrastructure\n//      console.error(error); // log to console instead\n// \n//      // TODO: better job of transforming error for user consumption\n//      this.log(\"${operation} failed: ${error.message}\");\n// \n//      // Let the app keep running by returning an empty result.\n//      return of(result as T);\n//    };\n//  }\n \n  /** Log a HeroService message with the MessageService */\n//  private log(message: string) {\n//    this.log('HeroService: ' + message);\n//  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz.service.ts","import {QuizzResponse} from './quizz-response';\nimport {QuizzQuestion} from './quizz-question'\n\nexport class Quizz {\n\n    constructor(\n        public id: number,\n        public name: string,\n        public description: string,\n        public  questions : QuizzQuestion[]) {         \n   \n     }\n\n     addQuestion(aNewQuestion: QuizzQuestion){\n          let addedNewQuestion  = JSON.parse(JSON.stringify(aNewQuestion ));\n          this.questions.push(addedNewQuestion);\n     }\n    \n    removeQuestion(questionIndex){\n       this.questions.splice(questionIndex, 1);\n    }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/app/quizz.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/chidra/dev/sts/sts391/workspace/funquizz/front-end/src/main.ts"],"sourceRoot":"webpack:///"}